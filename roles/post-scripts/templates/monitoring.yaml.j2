---
apiVersion: v1
kind: Namespace
metadata:
  name: supervision
#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: web-config-node-exporter
#  namespace: monitoring
#data:
#  web-config.yml: |
#    tls_server_config:
#      cert_file: /var/tls-monitoring/crt.pem
#      key_file: /var/tls-monitoring/key.pem
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: supervision
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      tolerations:
        - effect: NoSchedule
          operator: Exists
      hostNetwork: true
      hostPID: true
      containers:
      - name: node-exporter
        image: quay.io/prometheus/node-exporter:v1.1.0
        args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          #- --web.config="/etc/node-exporter/web-config.yml"
          #- --no-collector.arp
          #- --no-collector.bcache
          #- --no-collector.bonding
          #- --no-collector.conntrack
          #- --no-collector.cpu
          #- --no-collector.cpufreq
          #- --no-collector.diskstats
          #- --no-collector.edac
          #- --no-collector.entropy
          #- --no-collector.filefd
          #- --no-collector.filesystem
          #- --no-collector.hwmon
          #- --no-collector.infiniband
          #- --no-collector.ipvs
          #- --no-collector.loadavg
          #- --no-collector.mdadm
          #- --no-collector.meminfo
          #- --no-collector.netclass
          #- --no-collector.netdev
          #- --no-collector.netstat
          #- --no-collector.nfs
          #- --no-collector.nfsd
          #- --no-collector.pressure
          #- --no-collector.rapl
          #- --no-collector.schedstat
          #- --no-collector.sockstat
          #- --no-collector.softnet
          #- --no-collector.stat
          #- --no-collector.textfile
          #- --no-collector.thermal_zone
          #- --no-collector.time
          #- --no-collector.timex
          #- --no-collector.udp_queues
          #- --no-collector.uname
          #- --no-collector.vmstat
          #- --no-collector.xfs
          #- --no-collector.zfs
        ports:
        - name: metrics
          containerPort: 9100
        volumeMounts:
        - name: proc
          mountPath: /host/proc
        - name: sys
          mountPath: /host/sys
#        - name: web-config
#          mountPath: /etc/node-exporter/web-config.yml
#          subPath: web-config.yml
#        - name: tls-monitoring
#          mountPath: /var/tls-monitoring/
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
#        - name: web-config
#          configMap:
#            name: web-config-node-exporter
#        - name: tls-monitoring
#          secret:
#            secretName: tls-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: supervision
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: supervision
{% if agorakube_features.supervision.monitoring.persistent.enabled | bool == True %}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: supervision
  labels:
    openebs.io/target-affinity: agorakube-monitoring
spec:
{% if agorakube_features.supervision.monitoring.persistent.storage.type == "hostpath" %}
  storageClassName: persistent-prometheus-data
{% endif %}
{% if agorakube_features.supervision.monitoring.persistent.storage.type == "storageclass" %}
  storageClassName: "{{ agorakube_features.supervision.monitoring.persistent.storage.storageclass.name }}"
{% endif %}
{% if agorakube_features.supervision.monitoring.persistent.storage.type == "persistentvolume" %}
  storageClassName: "{{ agorakube_features.supervision.monitoring.persistent.storage.persistentvolume.name }}"
{% endif %}
  resources:
    requests:
      storage: "{{ agorakube_features.supervision.monitoring.persistent.storage.capacity }}"
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
{% endif %}
---
{% if agorakube_features.supervision.monitoring.persistent.storage.type == "hostpath" %}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: persistentvolume-prometheus-data
  namespace: supervision
spec:
  storageClassName: persistent-prometheus-data
  capacity:
    storage: {{ agorakube_features.supervision.monitoring.persistent.storage.capacity }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ agorakube_features.supervision.monitoring.persistent.storage.hostpath.path }}"
{% endif %}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: supervision
data:
  prometheus.yaml: |
{% raw %}
    global:
      scrape_interval: 10s
      scrape_timeout: 5s
      evaluation_interval: 1m
    scrape_configs:
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          #regex: monitoring
          regex: supervision
          action: keep
        - source_labels: [__meta_kubernetes_pod_controller_name]
          regex: node-exporter
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: 9100
          action: keep
      scheme: http
      #tls_config:
      #  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #  insecure_skip_verify: true
      #bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
{% endraw %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: supervision
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
{% if agorakube_features.supervision.monitoring.persistent.enabled | bool == True  %}
        openebs.io/target-affinity: agorakube-monitoring
{% endif %}
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.24.1
        args:
          - --web.enable-lifecycle
          - --web.listen-address=0.0.0.0:9090
          - --web.enable-admin-api
          - --web.page-title=IKE-Prometheus
          - --storage.tsdb.path=/prometheus
          - --config.file=/etc/prometheus/prometheus.yaml
          - --storage.tsdb.retention.time=30d
        ports:
        - name: metrics
          containerPort: 9090
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          failureThreshold: 1
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          failureThreshold: 30
          periodSeconds: 10
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
{% if agorakube_features.supervision.monitoring.persistent.enabled | bool == True %}
        - name: prometheus-data
          mountPath: /prometheus
      initContainers:
      - name: prometheus-data-set-permissions
        image: busybox:1.32.0
        command: ["/bin/chown","-R","65534:65534", "/prometheus"]
        volumeMounts:
        - name: prometheus-data
          mountPath: /prometheus
{% endif %}
      volumes:
      - name: prometheus-config
        configMap:
         name: prometheus-config
{% if agorakube_features.supervision.monitoring.persistent.enabled | bool == True %}
      - name: prometheus-data
        persistentVolumeClaim:
            claimName: prometheus-data
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: supervision
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
