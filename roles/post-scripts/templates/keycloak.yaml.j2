---
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
  namespace: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:12.0.4
        env:
        - name: KEYCLOAK_USER
          value: "{{ agorakube_features.keycloak_oidc.admin.user }}"
        - name: KEYCLOAK_PASSWORD
          value: "{{ agorakube_features.keycloak_oidc.admin.password }}"
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_USER
          value: "{{ agorakube_features.keycloak_oidc.admin.user }}"
        - name: DB_PASSWORD
          value: "{{ agorakube_features.keycloak_oidc.admin.password }}"
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: "postgres"
        - name: DB_ADDR
          value: "keycloak-db"
        - name: DB_PORT
          value: "5432"
{% if agorakube_features.keycloak_oidc.auto_bootstrap.bootstrap_keycloak | bool == True %}
        - name: KEYCLOAK_IMPORT
          value: /var/realm-template.json
{% endif %}
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
{% if agorakube_features.keycloak_oidc.auto_bootstrap.bootstrap_keycloak | bool == True %}
        volumeMounts:
        - name: oidc-default-realm
          mountPath: /var/
      volumes:
        - name: oidc-default-realm
          configMap:
            name: oidc-default-realm
{% endif %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-db
  namespace: keycloak
  labels:
    app: keycloak-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-db
  template:
    metadata:
      labels:
        app: keycloak-db
    spec:
{% if agorakube_features.keycloak_oidc.storage.enabled | bool == True %}
{% if agorakube_features.keycloak_oidc.storage.type  == "hostpath" %}
      nodeSelector:
        kubernetes.io/hostname: {{ agorakube_features.keycloak_oidc.storage.hostpath.nodename }}
{% endif %}
{% endif %}
      containers:
      - name: keycloak-db
        image: postgres:13.2
        env:
        - name: POSTGRES_DB
          value: "keycloak"
        - name: POSTGRES_USER
          value: "{{ agorakube_features.keycloak_oidc.admin.user }}"
        - name: POSTGRES_PASSWORD
          value: "{{ agorakube_features.keycloak_oidc.admin.password }}"
        ports:
        - containerPort: 5432
{% if agorakube_features.keycloak_oidc.storage.enabled | bool == True %}
        volumeMounts:
        - name: keycloakdb-data
          mountPath: /var/lib/postgresql
{% endif %}
{% if agorakube_features.keycloak_oidc.storage.enabled | bool == True %}
      volumes:
      - name: keycloakdb-data
        persistentVolumeClaim:
          claimName: keycloakdb-data
{% endif %}
{% if agorakube_features.keycloak_oidc.storage.enabled | bool == True %}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloakdb-data
  namespace: keycloak
spec:
{% if agorakube_features.keycloak_oidc.storage.type  == "hostpath" %}
  storageClassName: keycloakdb-data-hostpath
{% endif %}
{% if agorakube_features.keycloak_oidc.storage.type  == "storageclass" %}
  storageClassName: "{{ agorakube_features.keycloak_oidc.storage.storageclass.name }}"
{% endif %}
{% if agorakube_features.keycloak_oidc.storage.type  == "persistentvolume" %}
  storageClassName: "{{ agorakube_features.keycloak_oidc.storage.persistentvolume.storageclass }}"
{% endif %}
  resources:
    requests:
      storage: {{ agorakube_features.keycloak_oidc.storage.capacity }}
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
{% if agorakube_features.keycloak_oidc.storage.type  == "persistentvolume" %}
  volumeName: "{{ agorakube_features.keycloak_oidc.storage.persistentvolume.name }}"
{% endif %}
---
{% if agorakube_features.keycloak_oidc.storage.type  == "hostpath" %}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloakdb-data-hostpath
  namespace: keycloak
spec:
  storageClassName: keycloakdb-data-hostpath
  capacity:
    storage: {{ agorakube_features.keycloak_oidc.storage.capacity  }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ agorakube_features.keycloak_oidc.storage.hostpath.path  }}"
{% endif %}
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-db
  labels:
    app: keycloak-db
  namespace: keycloak
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: keycloak-db
  type: ClusterIP
{% if agorakube_features.keycloak_oidc.auto_bootstrap.bootstrap_keycloak | bool == True %}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-view
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-auditor-oidc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-view
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: oidc:kubernetes-auditor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-oidc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: oidc:kubernetes-admin
---
apiVersion: v1
data:
  realm-template.json: |
    {
      "id" : "local",
      "realm" : "local",
      "notBefore" : 0,
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "c110e474-12e5-4dbe-aef0-0e8c016c54a4",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "local",
          "attributes" : { }
        }, {
          "id" : "b9043e98-7c0b-4a12-9f4c-891c55549fd3",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "local",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "a4c10289-3d7b-4ff7-9ab1-623830d0737f",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "ecada224-dd8b-4bb2-914c-20534897a8f0",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "1b0e3647-348c-4708-8e5a-4c5394167160",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "490fbaba-f093-4afe-b813-ddca7ec3484e",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "9540b57f-91e8-4885-9196-e13937483cdb",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "e6af91c2-04de-4317-8910-7b783aab71c9",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "9cafee6f-f1a5-4ff6-bd1d-404291ee8dd2",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "8f587839-6975-4431-aaa1-ee31dcce1e56",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "manage-clients", "query-clients", "view-authorization", "manage-realm", "view-events", "manage-authorization", "view-realm", "manage-users", "manage-identity-providers", "query-users", "manage-events", "view-identity-providers", "create-client", "view-users", "impersonation", "query-realms", "view-clients", "query-groups" ]
              }
            },
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "2750d3c9-ffad-4081-b3ca-0624afd2da46",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "616f02a6-cd0b-4705-b339-1648d1163a24",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "baa0d806-8ff5-4dbf-92da-8b413dcd256c",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "cd9f560f-58fa-47e5-b53e-ef60a0145380",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "c564c642-57b4-46e3-aa3c-ee06bec6cc0b",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "bc184d49-baa0-4f43-a2a3-1543c2d2fadb",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "df9908f0-474f-41c8-8f49-22e7ca08adc1",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-users", "query-groups" ]
              }
            },
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "692f35ea-3704-476d-b6ec-f6600d5040e3",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "4c03a8cc-5e10-4d7e-82d0-61d4d96da3f3",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "c674a8df-7fe3-4d73-8547-9f0fc8a34e1b",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          }, {
            "id" : "6b25e5fe-cef4-45d2-8bbb-f278c7505b60",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "acbe764a-5945-4d75-8262-38cc039a7867",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b9375fb5-13fa-4fb0-8ff1-f8b8019e208d",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "a55ec42b-808a-4352-acd6-83b9f4547839",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "b24a8f23-cee5-41ed-a3c2-a81b29cfbcf9",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "ca1e5463-52e4-43e1-97d9-51d7a9cff0bb",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "75de52ff-1484-4eff-81ba-5ff5213d74ce",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "b521d591-0c7f-40d1-b113-8fbac98286e4",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "02483163-f8cc-4a84-80e2-91e7f7012e50",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          }, {
            "id" : "abc1c42e-9a14-4b20-b330-543a8a0c9f3d",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
            "attributes" : { }
          } ],
          "kube" : [ ]
        }
      },
      "groups" : [ {
        "id" : "b3b92cd6-d7ac-402c-9772-629bdc7cc46c",
        "name" : "kubernetes-admin",
        "path" : "/kubernetes-admin",
        "attributes" : { },
        "realmRoles" : [ ],
        "clientRoles" : { },
        "subGroups" : [ ]
      }, {
        "id" : "074337b5-f77c-48d0-a856-677ef7c8aef6",
        "name" : "kubernetes-auditor",
        "path" : "/kubernetes-auditor",
        "attributes" : { },
        "realmRoles" : [ ],
        "clientRoles" : { },
        "subGroups" : [ ]
      } ],
      "defaultRoles" : [ "offline_access", "uma_authorization" ],
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account" ]
        } ]
      },
      "clients" : [ {
        "id" : "88db9a9e-3aaf-4b31-8317-948197b3a06f",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/local/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "defaultRoles" : [ "view-profile", "manage-account" ],
        "redirectUris" : [ "/realms/local/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b5ab1ad9-6ccf-4ffb-951a-9678eb1f39c2",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/local/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "redirectUris" : [ "/realms/local/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "4b1c6a22-f222-4da2-91e1-6b52dad0a9bd",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "4f9130b9-cfd7-4625-b83b-c12b590abb1d",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b9375fb5-13fa-4fb0-8ff1-f8b8019e208d",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "2b8b7806-80ed-4c1d-92ce-26e9a801b429",
        "clientId" : "kube",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "79e34f70-581a-4cc3-a2b4-10b5a4d670df",
        "redirectUris" : [ "http://{{ agorakube_features.keycloak_oidc.auto_bootstrap.host }}:*/*", "https://{{ agorakube_features.keycloak_oidc.auto_bootstrap.host }}:*/*", "http://{{ agorakube_features.keycloak_oidc.auto_bootstrap.host }}/*", "https://{{ agorakube_features.keycloak_oidc.auto_bootstrap.host }}/*", "*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "saml.assertion.signature" : "false",
          "saml.force.post.binding" : "false",
          "saml.multivalued.roles" : "false",
          "saml.encrypt" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false",
          "saml.server.signature" : "false",
          "saml.server.signature.keyinfo.ext" : "false",
          "exclude.session.state.from.auth.response" : "false",
          "backchannel.logout.session.required" : "true",
          "client_credentials.use_refresh_token" : "false",
          "saml_force_name_id_format" : "false",
          "saml.client.signature" : "false",
          "tls.client.certificate.bound.access.tokens" : "false",
          "saml.authnstatement" : "false",
          "display.on.consent.screen" : "false",
          "saml.onetimeuse.condition" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "protocolMappers" : [ {
          "id" : "426cc295-2646-460a-9c43-0f43809ab785",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-group-membership-mapper",
          "consentRequired" : false,
          "config" : {
            "full.path" : "false",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "userinfo.token.claim" : "true"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "87e8163e-9654-41cf-900e-dd0e6c71d365",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "a230cabc-3841-481b-8463-5ce9f766c034",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/local/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "**********",
        "redirectUris" : [ "/admin/local/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "10960207-0552-46b8-95b8-16d7938ee8f5",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "028d2a2d-91a6-48b2-8e78-6e2a22f1c26f",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "46de5f77-2e09-497f-8e0f-100067d33c8e",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "354fc026-a09e-40a6-9e9c-0866a12ba8b8",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "d23df903-908d-4155-908b-21c58781268e",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${profileScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "26843e37-74fc-43c2-97b3-3d3fd6a3cacf",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "936e0ffe-21e3-47a1-b024-93890dae3b13",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "60d4743f-9f1e-4416-b60d-436d6410ab05",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "82dcbe7c-75d1-4a25-9a92-3136257fe483",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "93b634b4-ab97-4187-b64d-2d41446a0996",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "86106c24-931d-4a4e-b6cd-ad79eb470f36",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ebbb8c28-7229-409b-a77d-e6f0553cef7a",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "0ee139ab-dfef-4b6d-8567-9482f513345b",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ce4df79f-55b4-4e5a-9bce-e6bd6bbb62d5",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ac68ac36-3a55-4db9-b930-824bf22eba45",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "12139411-b5c5-4d85-8a45-41305432a812",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "1b18a37f-2e1a-4d94-a1c8-7d57e744d9ec",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2ad9c653-2994-45b6-89f2-634e0082c8d6",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "64bb8adb-7d2d-4d0a-b7a8-b6c6374de1a2",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "9377acaa-19ec-4492-a7ff-68c9e9138d3f",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${emailScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "640946e1-b253-4b9a-a13c-3ec48326d885",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "56b8ffc7-b17a-42d1-ac6a-6210532e0647",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "f7dc7ab8-0ddc-4d92-935e-7daa6844412c",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${addressScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "5ef229ab-83e6-42f8-8da9-cbe8561601c6",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "322927ad-2e46-4455-be69-8fa2f0f79fc2",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "78b7fb88-65e0-4847-8d85-88fae36ef94a",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "8d08dbc4-0ee6-4fb2-8774-ee8772cf09b0",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "5bcb03b5-792e-4fcb-ab76-369274f0df05",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${rolesScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "2338249c-fcb0-4588-bf6f-a2cc40efd78a",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "9899a0cc-7295-4019-b887-cb84b895558d",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "9559e118-d7fa-4d42-900b-05663d1fb8f7",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "0286496e-dd91-4669-9bd0-40ba641980d0",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false",
          "consent.screen.text" : ""
        },
        "protocolMappers" : [ {
          "id" : "9ba1bbe1-560e-40f0-962e-0c5b720c8ca2",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "16cd382a-65e9-46ca-8d19-f9c2aefe737e",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "55128118-2463-4d8b-98cf-7abc16c534c3",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "7b724c3b-c873-46df-b346-790155d99797",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins" ],
      "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "33686654-21f6-4fef-bd4d-b9065bdd4215",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "dd2f6318-4204-421a-9586-feeb8eba66e8",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "9c7b9787-3fb7-4d21-8af7-f0f0e10b369e",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "3750334c-4e4d-4689-a4a7-0cb61ed572f4",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "f11c5b90-c835-4bdc-9802-df32c6a43ba3",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "10a122fe-4085-4829-bf54-a35c5e3a90d0",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "32b64008-5755-4aae-99e7-a0fe11efaa51",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper" ]
          }
        }, {
          "id" : "d9891065-59e4-4568-bade-d03229b38e5c",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "dbe86540-208e-4b2d-bdcd-97ddb011974d",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEoAIBAAKCAQEAiEIu/KMRkKYwnyNbXz1BhKOHU3JGKitRy2dCMg7ioafBRjih/i1wgW0K8Hl9Guf79UOODhMG4rpl6hhuLoGqrOrFx27+UB+ya7agdWHMVy9EorVHLYU16rmUEVGnvKV/9zhysZFWsDGFIH38X1PZhPeAhdIjWbjT1xEw6DQqQ+xSULaCf+ApSLyKzDUm6YyfLJ6Ni+1qAfQs18NSmK0zB/MeZr47lne4V7MD1X2Q6T4/Dkhsdf3BTjVSFey2dycwfgrb6cDYXtGu5dKsYqHvbps7OiOHIAgfxbDA4Yidzd9wEd5VdNi/2tbFr8jZRs9CGzWVZSjHOOcAOpeiJN4p1QIDAQABAoIBAAuP2h7T03S7tVp7jJBLSVjw61W4V53SaTFiRKqsuqxO6MaFnbFMt8QztX7sQCJdVvLb1Zz6HlZ0zJsNkaPemtXrYfbnQysXVXNwXrM3JjirqR5JVY3WRNny/05s6FfIj1Ax+QF6PKncudgk+Jo6KjXvLnesehVt6oPQUJ8TdhanQTeNENZeptU5Clw+o3Qt85xJCKifI8cRAU0fy+gw5XivirADvJOvHat9tsViDcy72ZyjstyduIqcJA2NodS+DCeAWA9k3pn5ynqeBiCMetR9xlqnGbtQLrFVT3jTNMAjbnQSt7WUk7PIWb9TFODfTEipEGe2rPd0byjISYdReYECgYEA7uZR3TsT9Vq0R0dnAbGvlgzNVh5VRGeMi7+kM55iW5XU0IVxfo5JubGEhznKt20Nt/4Q3NART1ZDvZNqJyKHFlKIZE8Xtygd8080ed/WwgJhAEKTnAos+ukBm1uuF7n0QihWgOscGxFpb+ZLKkqlBJj9xINdc8AQj58BamY5AOECgYEAkgMIJMPsav5J1iw789THFi/yIlBfF15ubO5Fd3UTkbjflmfLTp71Q3GAAKG8vRdjqAw+ZbIkXs2DnkiFQhzh+5+h+aotevFbAKr8/rH/XRH4o0MtM6nQ7ImjGCqgldoXKVTgRfRLYoaskAlB1C7u8K2osMKIZ/OYIFvmZW3yI3UCgYAN7bXGLUSboH80TLBvw9lV6Ucrhzc3dsYV+8VqEQjxCApRYgZc95TK09PDQpZUHXKYUKLRDPyFYKUwb2DYCUZRAdzb5FSgpCEi53JKzMcrppHbPwZ2KY23z0/9q9m5nmjkVo+8knigB2LbWFT3kUSPwQ/Cnlobfo44oW+msXEPYQJ/HIR7ErMxebQwt6PsEbN9LtgucoVADVBkQOJIrwwuxkdVZArhqnlhbcq9NWJheo0W6bt6dGJWuC1rh36iiEcb3AlRmXGjcF+zZm3++7/IIGViKoD0UyLXq1s2f4HT23C9FVV+eCs+jf+/tGIaeVaxVFCWoe9ctPDexXMtjKHsqQKBgD+xEM6kX2V2/M+n7F3PIjk2acBtwGlM55iiL7bRNK/NuT0jdlok9cQ0usE5AUkgDgHC4Q+nieJtj1PJl/ekvRbZQ55D6YRaXnqB5Hb+XDkEFZww0Jme7v27RIXIOD+KbwjBZGozfPFv+sXgE0KZpqmlrHwGRGpU+7f57HfXGcoX" ],
            "certificate" : [ "MIICmTCCAYECBgF5Rv/vOzANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVsb2NhbDAeFw0yMTA1MDcxMzIyMjhaFw0zMTA1MDcxMzI0MDhaMBAxDjAMBgNVBAMMBWxvY2FsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiEIu/KMRkKYwnyNbXz1BhKOHU3JGKitRy2dCMg7ioafBRjih/i1wgW0K8Hl9Guf79UOODhMG4rpl6hhuLoGqrOrFx27+UB+ya7agdWHMVy9EorVHLYU16rmUEVGnvKV/9zhysZFWsDGFIH38X1PZhPeAhdIjWbjT1xEw6DQqQ+xSULaCf+ApSLyKzDUm6YyfLJ6Ni+1qAfQs18NSmK0zB/MeZr47lne4V7MD1X2Q6T4/Dkhsdf3BTjVSFey2dycwfgrb6cDYXtGu5dKsYqHvbps7OiOHIAgfxbDA4Yidzd9wEd5VdNi/2tbFr8jZRs9CGzWVZSjHOOcAOpeiJN4p1QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAutEnjUqNG9D4H9jo/0IcWRaTt9cBtczTqHIryDWBntNBXH8t9xnthCsAoPgKJ6UqosT7L6F43W0+ouejsYPKuPJdsRUTODrVPg99AH6eArVmOZG8kI2IWo2DTqrUSvJKBk/vS+NimCbgP7ZNK8XWOXZVgnXJYN5lj/D3wsTF9IRkT6AlAuK+L9V0KU/FNeyzQA7+ZfOvg3u9NiyjxZMyOiNI/wZLuPneNSM9b8ufzupVFezQpRxOPMYb3LQWvBj7/NouqsaxAVj7/9B6wTWc2bEb3nScn7+Pqfae9QHnoRiIwnP9oOyrlfp9naRuR0BGwTzINRCvKQb4D5GK58+Dp" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "604547af-dadb-4c8e-b356-b47fa99e19e0",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "a7d8cef5-a7dc-42e9-9f89-1ef11a95a7b8" ],
            "secret" : [ "neDvmRCNR6BjHd99Vo1oUQ" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "ab9f2bec-cab3-4c15-b48f-26c9ca40cf81",
          "name" : "hmac-generated",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "fa0a6066-469b-4a43-8477-db2c531d2904" ],
            "secret" : [ "Zt8pJaW7vEcxZZg3Otj919m5mlqeHdAaT-M-_qetmoDarjbknMkm52sQ4QbXLm6jyuwUge3dWZvaDJz0WKv0mQ" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS256" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "58a23d35-3a8e-4aca-afa0-5deb221c4b4b",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "4beb5d87-9d88-43d3-888c-12928ab6eff0",
        "alias" : "Authentication Options",
        "description" : "Authentication options.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "basic-auth",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "basic-auth-otp",
          "requirement" : "DISABLED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "auth-spnego",
          "requirement" : "DISABLED",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "2bb58064-4eee-4db1-bab4-6d117200121b",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "auth-otp-form",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "76f7300d-da79-4d00-afc8-dd5c629f9313",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "ef5c6c0a-e276-4185-b0aa-efd531774379",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "auth-otp-form",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "b7e4ff95-9eaf-4a6c-82a2-65de73e52699",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "aef5a8d0-89b9-4d96-8f20-3edbae207eaf",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "reset-otp",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "6daf8cb6-3c34-46f0-820a-153e18c8866b",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "c01680cd-5cc5-4d9d-9fe7-1a766352731d",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "e4adbe34-b94b-48ba-8012-18249a7448af",
        "alias" : "browser",
        "description" : "browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "auth-spnego",
          "requirement" : "DISABLED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "flowAlias" : "forms",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "eeca93de-44be-4c24-9016-f77453058e22",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "client-jwt",
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "client-x509",
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "09eaf1b5-8508-45b5-a03e-595860b1a142",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "44feea1b-7190-494a-a565-0e605c089e94",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "6556fe44-6eaa-40ec-8175-4c34d23a9b95",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "b3aed74b-d68a-4e4f-9e8a-9c4ad0af86ca",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "82c47b98-7c9f-4cc4-904b-edce2b55db8f",
        "alias" : "http challenge",
        "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "no-cookie-redirect",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "Authentication Options",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "f721eb3f-7c16-4905-b394-84deab50bc11",
        "alias" : "registration",
        "description" : "registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "cd02a306-57dc-4555-b40b-58732745a71d",
        "alias" : "registration form",
        "description" : "registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "registration-profile-action",
          "requirement" : "REQUIRED",
          "priority" : 40,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "registration-password-action",
          "requirement" : "REQUIRED",
          "priority" : 50,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "requirement" : "DISABLED",
          "priority" : 60,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      }, {
        "id" : "463f3b39-6ab9-4f33-9b22-efa2b8d2041c",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "reset-credential-email",
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "authenticator" : "reset-password",
          "requirement" : "REQUIRED",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }, {
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        } ]
      }, {
        "id" : "eb6dfb70-9cc1-4183-a86a-fca3dc1abefa",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "b26f01bf-32b7-491f-a08b-0e7511aa52af",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "b83a328e-6d77-478b-89eb-f24ae81ca78c",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "terms_and_conditions",
        "name" : "Terms and Conditions",
        "providerId" : "terms_and_conditions",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "attributes" : {
        "clientOfflineSessionMaxLifespan" : "0",
        "clientSessionIdleTimeout" : "0",
        "clientSessionMaxLifespan" : "0",
        "clientOfflineSessionIdleTimeout" : "0"
      },
      "keycloakVersion" : "12.0.4",
      "userManagedAccessAllowed" : false
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: oidc-default-realm
  namespace: keycloak
{% endif %}
