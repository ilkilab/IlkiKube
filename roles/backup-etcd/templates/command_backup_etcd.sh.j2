{% set etcd_initial_cluster = [] %}
{% for host in groups['etcd']  %}
{{ etcd_initial_cluster.append( "https://"+hostvars[host].ansible_host+":2379" ) }}
{% endfor %}

{% if custom_etcd_backup_dir is defined %}
ETCDCTL_API=3 /usr/local/bin/etcd-{{etcd_release}}-linux-amd64/etcdctl --endpoints=$(ETCDCTL_API=3 /usr/local/bin/etcd-{{etcd_release}}-linux-amd64/etcdctl --endpoints={{ etcd_initial_cluster|join(',') }} --cacert={{pki_path}}/intermediate/etcd/ca.crt --cert={{pki_path}}/end/kube-etcd-healthcheck-client.crt --key={{pki_path}}/end/kube-etcd-healthcheck-client.key snapshot save {{custom_etcd_backup_dir}}/snapshot_etcd_cluster.`date +%m-%d-%y_%H-%M-%S`.db
{% else %}
ETCDCTL_API=3 /usr/local/bin/etcd-{{etcd_release}}-linux-amd64/etcdctl --endpoints=$(ETCDCTL_API=3 /usr/local/bin/etcd-{{etcd_release}}-linux-amd64/etcdctl --endpoints={{ etcd_initial_cluster|join(',') }} --cacert={{pki_path}}/intermediate/etcd/ca.crt --cert={{pki_path}}/end/kube-etcd-healthcheck-client.crt --key={{pki_path}}/end/kube-etcd-healthcheck-client.key endpoint status | grep ', true, false,' | awk '{ print $1}' | sed 's/,//g') --cacert={{pki_path}}/intermediate/etcd/ca.crt --cert={{pki_path}}/end/kube-etcd-healthcheck-client.crt --key={{pki_path}}/end/kube-etcd-healthcheck-client.key snapshot save {{data_path}}/backups_etcd/snapshot_etcd_cluster.`date +%m-%d-%y_%H-%M-%S`.db
{% endif %}
